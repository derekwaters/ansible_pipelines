---
aap_organizations:
  - name: "build"
    description: "Automated Build Pipeline org"
    state: present

aap_user_accounts:
  - username: "build_agent"
    password: "Password1"
    email: "build_agent@example.com"
    is_superuser: false
    is_system_auditor: false
    organization: "build"
    state: present

aap_applications:
  - name: build_pipeline
    organization: "build"
    description: "Application for access to build pipelines"
    authorization_grant_type: password
    client_type: public
    
controller_credential_types:
  - name: "gpg-signing-keys"
    description: "Keys for signing Ansible code"
    inputs:
      fields:
        - id: private_key
          type: string
          label: GPG Private Key Data
          secret: true
          multiline: true
        - id: passphrase
          type: string
          label: Passphrase
          secret: true
      required:
        - private_key
    injectors:
      env:
        ANSIBLE_SIGN_GPG_PASSPHRASE: '{{ passphrase }}'
        GPG_PRIVATE_KEY_FILE: '{{ tower.filename.private_key_file }}'
      file:
        template.private_key_file: '{{ private_key }}'

controller_credentials:
  - name: "github-api-token"
    description: "API Token for GitHub"
    organization: "build"
    credential_type: "GitHub Personal Access Token"
    inputs:
      token: "{{ github_api_token }}"
  - name: "key-signing-test"
    description: "GPG Key for signing Ansible code for test environment"
    organization: "build"
    credential_type: "gpg-signing-keys"
    inputs:
      private_key: "{{ key-signing-private-key }}"
      passphrase: "{{ key-signing-passphrase }}"

controller_projects:
   - name: "build_pipelines"
     description: "Automated Build Pipelines"
     organization: "build"
     scm_type: git
     scm_url: "https://github.com/derekwaters/ansible_pipelines.git"
     scm_branch: main
     scm_clean: true
     scm_update_on_launch: true
     update_project: true
     wait: true
     state: present

controller_inventories:
  - name: "build_servers"
    description: "Hosts used for Pipelines"
    organization: "build"
    state: present

controller_hosts:
  - name: "localhost"
    description: "Local Host for Pipelines"
    inventory: "build_servers"
    state: present
    enabled: true
    variables:
      ansible_connection: local 

controller_execution_environments:
  - name: "pipelines_ee"
    description: "Execution Environment used for build functions"
    organization: "build"
    image: "quay.io/rh-ee-dwaters/pipelines-ee"
    state: present

controller_templates:
  - name: "precommit_checks"
    playbook: "aap_configuration/playbooks/precommit_checks.yaml"
    job_type: "run"
    organization: "build"
    inventory: "build_servers"
    project: "build_pipelines"
    execution_environment: "pipelines_ee"
    ask_variables_on_launch: true
    extra_vars:
      github_api_token: "{{ github_api_token }}"
    state: present

  - name: "test_checks"
    playbook: "aap_configuration/playbooks/test_checks.yaml"
    job_type: "run"
    organization: "build"
    inventory: "build_servers"
    project: "build_pipelines"
    execution_environment: "pipelines_ee"
    ask_variables_on_launch: true
    extra_vars:
      github_api_token: "{{ github_api_token }}"
    state: present

  - name: "deploy_to_dev"
    playbook: "aap_configuration/playbooks/deploy_to_dev.yaml"
    job_type: "run"
    organization: "build"
    inventory: "build_servers"
    project: "build_pipelines"
    execution_environment: "pipelines_ee"
    ask_variables_on_launch: true
    extra_vars:
      github_api_token: "{{ github_api_token }}"
    state: present

  - name: "build_failed_incident"
    playbook: "aap_configuration/playbooks/build_failed_incident.yaml"
    job_type: "run"
    organization: "build"
    inventory: "build_servers"
    project: "build_pipelines"
    execution_environment: "pipelines_ee"
    ask_variables_on_launch: true
    state: present

  - name: "build_success_notification"
    playbook: "aap_configuration/playbooks/build_success_notification.yaml"
    job_type: "run"
    organization: "build"
    inventory: "build_servers"
    project: "build_pipelines"
    execution_environment: "pipelines_ee"
    ask_variables_on_launch: true
    state: present

  - name: "sign_code"
    playbook: "aap_configuration/playbooks/sign_code.yaml"
    job_type: "run"
    organization: "build"
    inventory: "build_servers"
    project: "build_pipelines"
    execution_environment: "sign_ee"
    ask_variables_on_launch: true
    state: present

controller_workflows:
  - name: "01-tenant_code_push_pipeline"
    description: "Perform tests on tenant code pushes"
    organization: "build"
    inventory: "build_servers"
    state: present
    extra_vars:
      remote_repo: "tbd"
      remote_branch: "dev"
      destination_email: "pipelines@company.com.au"
      source_email: "aap_build_bot@company.com.au"
    ask_variables_on_launch: true
    simplified_workflow_nodes:
      - identifier: precommit_checks
        unified_job_template: "precommit_checks"
        success_nodes:
          - "test_checks"
        failure_nodes:
          - "build_failed_incident"
        always_nodes: []
        credentials: []

      - identifier: test_checks
        unified_job_template: "test_checks"
        success_nodes:
          - "sign_code"
        failure_nodes:
          - "build_failed_incident"
        always_nodes: []
        credentials: []

      - identifier: sign_code
        unified_job_template: "sign_code"
        success_nodes:
          - "deploy_to_dev"
        failure_nodes:
          - "build_failed_incident"
        always_nodes: []
        credentials:
          - "key-signing-test"

      - identifier: deploy_to_dev
        unified_job_template: "deploy_to_dev"
        success_nodes:
          - "build_success_notification"
        failure_nodes:
          - "build_failed_incident"
        always_nodes: []
        credentials: []

      - identifier: build_failed_incident
        unified_job_template: "build_failed_incident"
        success_nodes: []
        failure_nodes: []
        always_nodes: []
        credentials: []

      - identifier: build_success_notification
        unified_job_template: "build_success_notification"
        success_nodes: []
        failure_nodes: []
        always_nodes: []
        credentials: []
 
...
